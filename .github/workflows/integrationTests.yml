name: IntegrationTest
on:
  push:
    branches:
      - main
      - dev
    tags: ['*']
  pull_request:
  workflow_dispatch:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'
          - '1.7'
          - '1.8'
          - '1.9'
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - name: Run integration test script
        run: julia --project=${GITHUB_WORKSPACE} .ci/getDeps.jl
  
  generate:
    name: Github Action - Generator Integration Jobs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: 1.9
          arch: x64
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - id: set-matrix
        run: echo "matrix=$(julia --project=${GITHUB_WORKSPACE} .ci/generateGithubActions.jl 2> /dev/null)" >> $GITHUB_OUTPUT
    outputs:
        matrix: ${{ steps.set-matrix.outputs.matrix }}

  run-matrix:
    needs: generate
    runs-on: ubuntu-latest
    strategy:
        matrix:
            package: ${{ fromJson(needs.generate.outputs.matrix) }}
    steps:
        - run: echo "run Integration Test for package ${{ matrix.package }}"
